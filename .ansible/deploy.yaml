# ansible-playbook deploy.yaml -i inventory/prod/hosts --vault-id ~/.tokens/master_id

- hosts: drone
  tasks:

    - name: Create directories
      file:
        path: '{{ item }}'
        state: directory
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
        mode: '0740'
      with_items:
      - '{{ directories_drone_docker }}'
      - '{{ directories_drone_data }}'
      - '{{ directories_drone_runner }}'
      - '{{ directories_drone_runner_env }}'
      - '{{ directories_drone_runner_git }}'
      become: yes

    - name: Create ssh directory {{ directories_drone_runner_git_ssh }} with special permissions
      file:
        path: '{{ directories_drone_runner_git_ssh }}'
        state: directory
        owner: 'root'
        group: 'root'
        mode: '0700'
      become: yes

    - name: Copy over Drone Runner .env file for use in Drone steps and plugin containers
      copy:
        content: |
          ANSIBLE_CONFIG=.ansible/ansible.cfg
          REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
          TZ=America/Los_Angeles
        dest: '{{ directories_drone_runner_env }}/drone.env'
        mode: '0644'
      become: yes

    - name: Copy over Drone Runner ssh config file for use in Drone steps and plugin containers
      copy:
        content: |
          Host github.com
            StrictHostKeyChecking no
            User git
            IdentityFile /root/.ssh/id_rsa_github
        dest: '{{ directories_drone_runner_git_ssh }}/config'
        owner: root
        group: root
        mode: '0644'
      become: yes

    - name: Copy over Drone Runner ssh private key file for use in Drone steps and plugin containers
      copy:
        content: '{{ automation_id_rsa }}'
        dest: '{{ directories_drone_runner_git_ssh }}/id_rsa_github'
        owner: root
        group: root
        mode: '0600'
      become: yes

    - name: Render the {{ directories_drone_docker }}/docker-compose.yaml template
      template:
        src: ./templates/docker-compose.yaml.j2
        dest: '{{ directories_drone_docker }}/docker-compose.yaml'
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
        mode: '0740'

    - name: Deploy {{ docker_stack }} stack
      command: docker stack deploy --prune -c docker-compose.yaml {{ docker_stack }}
      args:
        chdir: '{{ directories_drone_docker }}'

    - name: Pause for 10 seconds
      pause:
        seconds: 10

    - name: Wait for https://{{ proxy_domain_external }}/welcome to be found
      uri:
        method: GET
        url: https://{{ proxy_domain_external }}/welcome
        status_code:
          - 200
        headers:
          Authorization: Bearer {{ github_pat }}
      register: _result
      until: ("status" in _result) and (_result.status == 200 or _result.status == 401)
      retries: 30
      delay: 1

    - name: "Waiting for GitHub admin to sign into https://{{ proxy_domain_external }}/ (Tip: Use incognito window )"
      uri:
        method: GET
        url: https://{{ proxy_domain_external }}/api/user/repos
        status_code:
          - 200
        headers:
          Authorization: Bearer {{ github_pat }}
      register: _result
      until: '"status" in _result and _result.status == 200 and _result.json | length > 0'
      retries: 240
      delay: 1


version: '3.8'
services:

  server:
    image: docker.nexus.diesel.net/drone-nolimit:2.12.0
    environment:
      - DRONE_AGENTS_ENABLED=true
      - DRONE_DATABASE_SECRET={{ drone_database_secret }}
      - DRONE_GIT_ALWAYS_AUTH=true
      - DRONE_GITHUB_CLIENT_ID={{ github_client_id }}
      - DRONE_GITHUB_CLIENT_SECRET={{ github_client_secret }}
      - DRONE_GITHUB_SERVER=https://{{ github_server }}
      - DRONE_LOGS_COLOR=true
      - DRONE_LOGS_DEBUG=false
      - DRONE_LOGS_PRETTY=true
      - DRONE_LOGS_TEXT=true
      - DRONE_LOGS_TRACE=false
      - DRONE_RPC_SECRET={{ drone_rpc_secret }}
      - DRONE_SERVER_HOST={{ proxy_domain_external }}
      - DRONE_SERVER_PROTO=https
      - DRONE_USER_CREATE=username:{{ drone_username }},machine:false,admin:true,token:{{ github_pat }}
      - DRONE_ADMISSION_PLUGIN_ENDPOINT=http://drone_administration:3000
      - DRONE_ADMISSION_PLUGIN_SECRET={{ drone_administration_secret }}
      - DRONE_CRON_INTERVAL=5m
      - DRONE_WEBHOOK_ENDPOINT={{ drone_webhook_endpoint }}
      - DRONE_WEBHOOK_SECRET={{ drone_webhook_secret }}
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.services.drone.loadbalancer.server.port=80
        - traefik.http.routers.drone.tls.certresolver=step-ca
        - traefik.http.routers.drone.rule=Host(`{{ proxy_domain_internal }}`,`{{ proxy_domain_external }}`)

        - traefik.http.routers.drone.tls.domains[0].main={{ proxy_domain_internal }}
        - traefik.http.routers.drone.tls.domains[0].sans={{ proxy_domain_internal }}

        - traefik.http.middlewares.external-redirect.redirectregex.regex=^https://{{ proxy_domain_internal }}/(.*)
        - traefik.http.middlewares.external-redirect.redirectregex.replacement=https://{{ proxy_domain_external }}/$${1}

        - traefik.http.routers.drone.middlewares=external-redirect@docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt
      - /etc/localtime:/etc/localtime
      - {{ data_dir }}:/data
    networks:
      - {{ traefik_network }}
      - private_net

  administration:
    image: drone/drone-admit-members
    environment:
      - DRONE_DEBUG=false
      - DRONE_SECRET={{ drone_administration_secret }}
      - DRONE_GITHUB_TOKEN={{ github_pat }}
      - DRONE_GITHUB_TEAM={{ github_team }}
      - DRONE_GITHUB_ORG={{ github_owner }}
      - DRONE_GITHUB_ENDPOINT=https://{{ github_api }}
    volumes:
      - /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt
    networks:
      private_net:
        aliases:
        - drone_administration

  runner:
    image: drone/drone-runner-docker:1.8.1
    environment:
      - DRONE_DEBUG=false
      - DRONE_RPC_DUMP_HTTP=false
      - DRONE_RPC_HOST={{ proxy_domain_external }}
      - DRONE_RPC_PROTO=https
      - DRONE_RPC_SECRET={{ drone_rpc_secret }}
      - DRONE_RUNNER_CAPACITY=8
      - DRONE_RUNNER_NAME=Runner
      - DRONE_RUNNER_VOLUMES=/etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt,{{ config_dir }}/.ssh:/root/.ssh,/var/run/docker.sock:/var/run/docker.sock
      - DRONE_RUNNER_ENV_FILE=/etc/drone.env
      - DRONE_TRACE=false
      - DRONE_CRON_INTERVAL=5m
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt
      - /etc/localtime:/etc/localtime
      - '{{ config_dir }}/drone.env:/etc/drone.env'
      - '{{ config_dir }}/.ssh:/root/.ssh'
    networks:
      - {{ traefik_network }}

networks:
  {{ traefik_network }}:
    external: true
  private_net:
